Complete these problems later:

CODEPATH
1. Unit 1 
    Session #2
    (questions)
    - integer to roman

    Optional practice problems
    (questions)
    - Length of Longest Fibonacci Subsequence
    - Split Array into Fibonacci Sequence

2. Unit 2
    GENERAL
    (questions)
    1. Linked List
    - reorder list problem
    - intersection of two linked lists

    2. Recursion with memoization
    - study the edge cases

    3. Strings and Arrays
    ######(question 1 - hackerank test)######
    For each word in a list of words, if any two adjacent characters are equal, change one of them.
    Determine the minimum number of substitutions so the final string contains no adjacent equal
    characters.    
    Example:
    words = ['add', 'boook', 'break']
    1. 'add': change one d (1 change)
    2. 'boook': change the middle o (1 change)
    3. 'break': no changes are necessary (0 changes)
    The return array is [1,1,0].
    Function Description
    Complete the function minimalOperations in the editor below.
    minimalOperations has the following parameter(s):
    string words[n]: an array of strings
    Returns:
    int[n]: each element i is the minimum substitutions for words[i]
    Constraints
    1 ≤ n ≤ 100
    2 ≤ length of words[i] ≤ 10
    Each character of words[i] is in the range ascii[a-z].

    ######(question 2 - hackerank test)########
    Given an array of integers, without reordering, determine the maximum difference between any element
    and any prior smaller element. If there is never a lower prior element, return -1.
    Example
    arr = [5, 3, 6, 7, 4]
    There are no earlier elements than arr[0].
    There is no earlier reading with a value lower than arr[1].
    There are two lower earlier readings with a value lower than arr[2] = 6:
    arr[2] - arr[1] = 6 - 3 = 3
    arr[2] - arr[0] = 6 - 5 = 1
    There are three lower earlier readings with a lower value than arr[3] = 7:
    arr[3] - arr[2] = 7 - 6 = 1
    arr[3] - arr[1] = 7 - 3 = 4
    arr[3] - arr[0] = 7 - 5 = 2
    There is one lower earlier reading with a lower value than arr[4] = 4:
    arr[4] - arr[1] = 4 - 3 = 1
    The maximum trailing record is arr[3] - arr[1] = 4.
    Example
    arr = [4, 3, 2, 1]
    No item in arr has a lower earlier reading, therefore return -1


    ######(question 3)########
    (write an optimized solution to this problem)
    Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.
    You must do it in place.
    Examples
    Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
    Output: [[1,0,1],[0,0,0],[1,0,1]]

    Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
    Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
